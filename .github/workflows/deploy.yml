name: Node.js Deployment

on:
  workflow_run:
    workflows:
      - Node.js Test  # Name of the testing workflow
    types:
      - completed  # Trigger only after the testing workflow completes
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  # Stored as a GitHub secret

      # Step 2: Log in to Azure Container Registry
      - name: Log in to ACR
        run: az acr login --name avy1013

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t avy1013.azurecr.io/my-nodejs-app:latest .

      # Step 4: Push Docker image to ACR
      - name: Push Docker image
        run: docker push avy1013.azurecr.io/my-nodejs-app:latest
      
      # Step 5: Get creds
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group assesment --name az-devops --overwrite-existing
      
      # Step 6: deploying 
      - name: deploye yaml
        run: |
            kubectl apply -f k8s/deployment.yml
            kubectl apply -f k8s/service.yml

      # Step 7: verify     
      - name: Verify Deployment
        run: |
            kubectl get pods
            kubectl get service manhwa-app-service  
      # Step 8: Send Success Email Notification
      - name: Send Success Email
        if: success()
        run: |
          echo -e "Subject: Deployment Successful\n\nDeployment to AKS was successful." | sendmail -S smtp.gmail.com:587 -f ${{ secrets.SMTP_USER }} -t ${{ secrets.TO_EMAIL }} -u ${{ secrets.SMTP_PASS }}

      # Step 9: Send Failure Email Notification
      - name: Send Failure Email
        if: failure()
        run: |
          echo -e "Subject: Deployment Failed\n\nDeployment to AKS failed." | sendmail -S smtp.gmail.com:587 -f ${{ secrets.SMTP_USER }} -t ${{ secrets.TO_EMAIL }} -u ${{ secrets.SMTP_PASS }}
